---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Google Game Services"
layout: "google"
page_title: "Google: google_game_services_game_server_cluster"
sidebar_current: "docs-google-game-services-game-server-cluster"
description: |-
  A game server cluster resource.
---

# google\_game\_services\_game\_server\_cluster

A game server cluster resource.

To get more information about GameServerCluster, see:

* [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.realms.gameServerClusters)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/game-servers/docs)

## Argument Reference

The following arguments are supported:


* `cluster_id` -
  (Required)
  Required. The resource name of the game server cluster

* `realm_id` -
  (Required)
  The realm id of the game server realm.

* `connection_info` -
  (Required)
  Game server cluster connection information. This information is used to
  manage game server clusters.  Structure is documented below.


The `connection_info` block supports:

* `gke_cluster_reference` -
  (Required)
  Reference of the GKE cluster where the game servers are installed.  Structure is documented below.

* `namespace` -
  (Required)
  Namespace designated on the game server cluster where the game server
  instances will be created. The namespace existence will be validated
  during creation.


The `gke_cluster_reference` block supports:

* `cluster` -
  (Required)
  The full or partial name of a GKE cluster, using one of the following
  forms:
  * `projects/{project_id}/locations/{location}/clusters/{cluster_id}`
  * `locations/{location}/clusters/{cluster_id}`
  * `{cluster_id}`
  If project and location are not specified, the project and location of the
  GameServerCluster resource are used to generate the full name of the
  GKE cluster.

- - -


* `location` -
  (Optional)
  Location of the Cluster.

* `labels` -
  (Optional)
  The labels associated with this game server cluster. Each label is a
  key-value pair.

* `description` -
  (Optional)
  Human readable description of the cluster.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/locations/{{location}}/realms/{{realm_id}}/gameServerClusters/{{cluster_id}}`

* `name` -
  The resource id of the game server cluster, eg:
  `projects/{project_id}/locations/{location}/realms/{realm_id}/gameServerClusters/{cluster_id}`.
  For example,
  `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.


## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is 4 minutes.
- `update` - Default is 4 minutes.
- `delete` - Default is 4 minutes.

## Import

GameServerCluster can be imported using any of these accepted formats:

```
$ terraform import -provider=google-beta google_game_services_game_server_cluster.default projects/{{project}}/locations/{{location}}/realms/{{realm_id}}/gameServerClusters/{{name}}
$ terraform import -provider=google-beta google_game_services_game_server_cluster.default {{project}}/{{location}}/{{realm_id}}/{{name}}
$ terraform import -provider=google-beta google_game_services_game_server_cluster.default {{location}}/{{realm_id}}/{{name}}
```

-> If you're importing a resource with beta features, make sure to include `-provider=google-beta`
as an argument so that Terraform uses the correct provider to import your resource.

## User Project Overrides

This resource supports [User Project Overrides](https://www.terraform.io/docs/providers/google/guides/provider_reference.html#user_project_override).
